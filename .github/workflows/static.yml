name: Generate Site
run-name: ${{ github.actor }} is generating Site 🚀 
on: 
  push:
    branches:
      - master
  workflow_dispatch: # Allows triggering the build manually

permissions:
  # This permission governs access to the repository's code and files.
  contents: read 
  # This permission is used for OpenID Connect (OIDC) authentication. id-token: write: Allows the workflow to generate a JSON Web Token (JWT) that can be used to authenticate with external cloud providers (like AWS, Azure, or GCP) or other services that support OIDC. This enables secure, passwordless authentication from GitHub Actions to external systems.
  id-token: write 

jobs:
  Generate-Website:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout private repository
        uses: actions/checkout@v5
        with:
          repository: ${{ secrets.OTHER_REPO }}
          token: ${{ secrets.ACCESS_PRI_REPO }}
          ref: main
      - name: List all files are in private clone
        run: | 
          tree .
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: yarn
#      - name: Restore cache
#        uses: actions/cache@v4
#        with:
#          path: .next/cache
#          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
#          restore-keys: |
#            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-
      - run: yarn
      - run: yarn build
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Calculate yarn cache size
        run: du -sh ${{ steps.yarn-cache-dir-path.outputs.dir }}
      - uses: actions/upload-artifact@v4
        with:
          name: distribution
          path: ./out
          retention-days: 1
          if-no-files-found: error
  Deploy-Website:
    runs-on: ubuntu-latest
    needs: Generate-Website
    steps:
      - name: Get the artifact
        uses: actions/download-artifact@v4
        with:
          name: distribution
          path: ./dist
      - run: |
          tree .
      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
          aws-region: us-east-1
      - name: List S3 files
        run: |
          aws s3 ls ${{ secrets.S3_BUCKET }}
      - name: Add files to S3 
        run: |
          aws s3 cp ./dist/ ${{ secrets.S3_BUCKET }} --recursive
      - name: List S3 files
        run: |
          aws s3 ls ${{ secrets.S3_BUCKET }}
      - name: Invalidate CloudFront distribution
        run: | 
          aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths "/*"  > /dev/null
      - run: tree .
      - run: echo "🍏 This job's status is ${{ job.status }}."
